# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: management
#   labels:
#     app: management
# spec:
#   type: NodePort
#   selector:
#     app: management
#   ports:
#   - protocol: TCP
#     port: 8080
#     name: http
#     nodePort: 31002

# ---
# apiVersion: v1
# kind: ReplicationController
# metadata:
#   name: management
# spec:
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: management
#     spec:
#       containers:
#       - name: management
#         image: nidhi999/management_img
#         ports:
#         - containerPort: 8080
          

        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 8080
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 1



---
apiVersion: v1
kind: Service
metadata:
  name: management
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8080"
  labels:
    app: management
spec:
  type: NodePort
  selector:
    app: management
  ports:
  - protocol: TCP
    port: 8080
    name: http
    nodePort: 31002
  # - protocol: TCP
  #   port: 5556
  #   name: metricport
  #   nodePort: 31500
  
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: management
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8080"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: management
    spec:
      containers:
      - name: management
        image: nidhi999/management_img
        ports:
        - containerPort: 8080
        # - containerPort: 5556
        env:
        - name: JAVA_TOOL_OPTIONS  
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=5556 -Dcom.sun.management.jmxremote.rmi.port=5556 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false"
              

#         # livenessProbe:
#         #   httpGet:
#         #     path: /health
#         #     port: 8080
#         #   initialDelaySeconds: 30
#         #   timeoutSeconds: 1